<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- ✅ DAO 클래스 자동 등록 (OfferDao 등) -->
    <context:component-scan base-package="kr.ac.hansung.cse.dao" />

    <!-- ✅ DB 연결 정보 불러오기 (jdbc.properties 파일에서 driver/url/id/pw 설정 로딩) -->
    <context:property-placeholder location="/jdbc.properties" />

    <!-- ✅ DBCP2 기반 DataSource 빈 설정 (DB 연결 객체) -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- ✅ JPA 설정: EntityManagerFactory 생성 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

        <!-- DB 연결용 DataSource 주입 -->
        <property name="dataSource" ref="dataSource" />

        <!-- JPA 엔티티가 들어있는 패키지 (ex: Offer.class) -->
        <property name="packagesToScan" value="kr.ac.hansung.cse.model" />

        <!-- Hibernate JPA 벤더 어댑터 설정 -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="MYSQL" />
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL8Dialect" />
            </bean>
        </property>

        <!-- Hibernate 세부 설정 -->
        <property name="jpaProperties">
            <props>
                <!-- 실행되는 SQL을 콘솔에 출력 -->
                <prop key="hibernate.show_sql">true</prop>

                <!-- SQL 문 예쁘게 정렬 -->
                <prop key="hibernate.format_sql">true</prop>

                <!-- 테이블 자동 생성: 테스트용 (주의: 기존 테이블 날아감) -->
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>
    </bean>

    <!-- ✅ 트랜잭션 매니저 설정 (JPA 기반 트랜잭션 관리) -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- ✅ @Transactional 어노테이션을 통한 트랜잭션 적용 가능하게 설정 -->
    <tx:annotation-driven />

</beans>
